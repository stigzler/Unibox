//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Unibox.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Unibox.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For remote installations (i.e. ones on the network rather than the host machine) if you have your roms or media in locations set to ones other than the launchbox default (i.e. within the installation folder) these paths will show up as on the remote computer’s remote drives (e.g. &apos;D:\Games&apos;). These will need to be set to a full UNC path in order to allow remote editing. Unibox can automatically make these replacements by specifying a part of the path to replace with what text. In the example, ‘D:\Games’ can [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AddInstallationPathReplacementHelp {
            get {
                return ResourceManager.GetString("AddInstallationPathReplacementHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit an Installation&apos;s details here. The &quot;Show Paths&quot; button can help with setting up path remaps (for example, remapping remote installations&apos; local drives to a UNC network path). .
        /// </summary>
        public static string EditInstalltionSubTitle {
            get {
                return ResourceManager.GetString("EditInstalltionSubTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This list allows you to study what each Platform&apos;s Rom and Media paths look like in the installation&apos;s Launchbox database. Useful when considering whether to set up a path remap for remote installations (where rom paths are stored as local paths on the remote machine, meaning you need to remap the relevant part of those paths to use the remote UNC path instead)..
        /// </summary>
        public static string PlatformDetailsText {
            get {
                return ResourceManager.GetString("PlatformDetailsText", resourceCulture);
            }
        }
    }
}
